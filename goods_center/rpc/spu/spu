// Code generated by goctl. DO NOT EDIT.
// Source: spu.proto

package spuclient

import (
	"context"

	"goods_center/rpc/spu"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetSpuInfoRequest  = spu.GetSpuInfoRequest
	GetSpuInfoResponse = spu.GetSpuInfoResponse
	SpuInfo            = spu.SpuInfo

	Spu interface {
		GetSpuInfo(ctx context.Context, in *GetSpuInfoRequest, opts ...grpc.CallOption) (*GetSpuInfoResponse, error)
	}

	defaultSpu struct {
		cli zrpc.Client
	}
)

func NewSpu(cli zrpc.Client) Spu {
	return &defaultSpu{
		cli: cli,
	}
}

func (m *defaultSpu) GetSpuInfo(ctx context.Context, in *GetSpuInfoRequest, opts ...grpc.CallOption) (*GetSpuInfoResponse, error) {
	client := spu.NewSpuClient(m.cli.Conn())
	return client.GetSpuInfo(ctx, in, opts...)
}
